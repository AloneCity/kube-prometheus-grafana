apiVersion: batch/v1
kind: Job
metadata:
  name: grafana-import-dashboards
  namespace: {{ .Values.namespace }}
spec:
  parallelism: 1
  completions: 1
  #backoffLimit: 1
  template:
    metadata:
      name: grafana-import-dashboards
    spec:
      containers:
      - name: grafana-import-dashboards
        image: alpine:3.4
        env:
        - name: GRAFANA_API
          value: http://grafana:3000
        - name: PROMETHEUS_SERVICE
          value: "{{ .Values.grafana.prometheus.endpoint }}"
        command:
        - "bin/sh"
        - "-c" 
        - |-
          apk add --no-cache curl; 
          #WTF IS THIS ? (Wait for grafana pod to be up before we start importing dashboards!)
          sleep 1m
          cd /opt/grafana-import-datasources

          echo "importing data sources..."
          until $(curl --silent --fail --show-error --output /dev/null $GRAFANA_API/api/datasources); do
              printf '.' ; sleep 1 ;
          done ;
          for file in *.json ; do
          if [ -e "$file" ] ; then
              echo "importing $file" &&
              curl --silent --fail --show-error \
              --request POST $GRAFANA_API/api/datasources \
              --header "Content-Type: application/json" \
              --data-binary "@$file" ;
              echo "" ;
          fi
          done ;
          
          echo "importing dashboards..."
          cd /opt/grafana-import-dashboards
          for file in *.json ; do
          if [ -e "$file" ] ; then
            echo "importing $file" &&
            (echo '{"dashboard":';cat "$file";echo '}') | curl --silent --fail --show-error \
            --request POST $GRAFANA_API/api/dashboards/db \
            --header "Content-Type: application/json" \
            --data-binary @-;
            echo "" ;
          fi
          done ;

          while true; do
          sleep 1m ;
          done
          exit 0;
        
        volumeMounts:
        - name: granafa-dashboards
          mountPath: /opt/grafana-import-dashboards
        - name: grafana-datasources
          mountPath: /opt/grafana-import-datasources
      volumes:
      - name: granafa-dashboards
        configMap:
          name: grafana-dashboards
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      restartPolicy: Never